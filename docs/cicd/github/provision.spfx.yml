# This is just an example workflow for provision.
# You should customize it to meet your own requirements.
name: 'Provision'
on:
  # Manually trigger this workflow, and you should pick the right branch.
  workflow_dispatch:
jobs:
  provision:
    runs-on: ubuntu-latest
    # You can uncomment the line below to use environments (refer to https://docs.github.com/en/actions/reference/environments). 
    #environment: test_environment
    env:
      M365_ACCOUNT_NAME: ${{secrets.M365_ACCOUNT_NAME}}
      M365_ACCOUNT_PASSWORD: ${{secrets.M365_ACCOUNT_PASSWORD}}
      M365_TENANT_ID: ${{secrets.M365_TENANT_ID}}
      # To specify the environment name which will be used as an option below.
      # You can change it to use your own environment name.
      TEAMSFX_ENV_NAME: 'dev'
      # To specify the version of TTK CLI for use.
      TEAMSFX_CLI_VERSION: 1.*

    steps:
      # Setup environment.
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          
      - name: Checkout the code
        uses: actions/checkout@v2

      # We suggest to do the `teamsfx provision` step manually or in a separate workflow. The following steps are for your reference.
      # After provisioning, you should commit necessary files into the repository.
      - name: Provision hosting environment
        uses: OfficeDev/teamsfx-cli-action@v1
        with:
          cli-version: ${{env.TEAMSFX_CLI_VERSION}}
          commands: provision
          env: ${{env.TEAMSFX_ENV_NAME}}

      - name: Commit provision configs if necessary
        env:
          BRANCH: ${{github.ref}}
        run: |
          git config user.name "github-agent"
          git config user.email "github-agent@github.com"
          git add .
          git commit -m "chore: commit provision configs"
          git push origin ${BRANCH}
